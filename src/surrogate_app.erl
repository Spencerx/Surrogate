%file_comment
-module(surrogate_app).

-behaviour(application).
%% --------------------------------------------------------------------
%% Include files
%% --------------------------------------------------------------------

%% --------------------------------------------------------------------
%% Behavioural exports
%% --------------------------------------------------------------------
-export([
	 start/2,
	 stop/1
        ]).

%% --------------------------------------------------------------------
%% Internal exports
%% --------------------------------------------------------------------
-export([run/0]).

%% --------------------------------------------------------------------
%% Macros
%% --------------------------------------------------------------------

%% --------------------------------------------------------------------
%% Records
%% --------------------------------------------------------------------

%% --------------------------------------------------------------------
%% API Functions
%% --------------------------------------------------------------------
run() ->
	appmon:start(),
	application:start(mnesia),
	application:start(crypto),
	application:start(public_key),
	application:start(ssl),
	application:load(surrogate),
	application:start(surrogate).

%% ====================================================================!
%% External functions
%% ====================================================================!
%% --------------------------------------------------------------------
%% Func: start/2
%% Returns: {ok, Pid}        |
%%          {ok, Pid, State} |
%%          {error, Reason}
%% --------------------------------------------------------------------
start(_Type, StartArgs) ->
	io:format("~p starting.~n",[?MODULE]),
    case surrogate_sup:start_link(StartArgs) of
	{ok, Pid} ->
		io:format("~p supervisor started: ~p~n",[?MODULE,Pid]),
	    {ok, Pid};
	Error ->
		io:format("~p Error: ~p~n",[?MODULE,Error]),
	    Error
    end.

%% --------------------------------------------------------------------
%% Func: stop/1
%% Returns: any
%% --------------------------------------------------------------------
stop(_State) ->
    ok.

%% ====================================================================
%% Internal functions
%% ====================================================================

